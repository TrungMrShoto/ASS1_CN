/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat_assignment;

import commom.User;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Meep
 */
public class InitChatFrame extends javax.swing.JFrame {

    //private static ServerThread serverSocket=null;
    List<JButton> listOfFriendButton = new ArrayList<>();

    private static int numOFriend = 19;
    private static String[] Friendslist;
    private BufferedReader buffered = null;
    private static String final_sendUser = "xx";
    private static Socket friendSocket = null;
    private static String Friend_name;
    private static String IP_friend;
    private static String myIP;
    private static String MyName;
    /**
     * Creates new form check
     *
     * @param title
     * @param server
     * @param IP
     * @param username
     * @throws java.io.IOException
     */
    public InitChatFrame(String title, ServerThread server, String IP_friend, String username_friend,String myIP, String MyName) throws IOException {
        this.txtMesslog.setEditable(false);
        this.Friend_name = username_friend;
        this.IP_friend = IP_friend;
        this.myIP = myIP;
        this.MyName = MyName;
        //this.serverSocket = server;
        //buffered = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(txtMessage.getText().getBytes())));
        //this.setTitle(title);
//        try {
//            friendSocket = new Socket(InetAddress.getByAddress(this.IP_friend.getBytes()).getCanonicalHostName(), 5001);
//            new PeerThread(friendSocket, txtMesslog).start();
//        } catch (IOException | NumberFormatException e) {
//            if (friendSocket != null) {
//                friendSocket.close();
//            } else {
//                JOptionPane.showMessageDialog(this, "invalid input");
//                System.exit(0);
//            }
//        }
        initComponents();
        //buffered = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(txtMessage.getText().getBytes())));
        

    }

    InitChatFrame(String title, ServerThread serverThread, User get) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSend = new javax.swing.JButton();
        btnClip = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMesslog = new javax.swing.JTextPane();
        txtMessage = new javax.swing.JTextField();

        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chat_assignment/res/iconfinder_send-01_186386.png"))); // NOI18N
        btnSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSendMouseClicked(evt);
            }
        });
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        btnSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSendKeyPressed(evt);
            }
        });

        btnClip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chat_assignment/res/iconfinder_clip_115756.png"))); // NOI18N
        btnClip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClipActionPerformed(evt);
            }
        });

        txtMesslog.setEditable(false);
        jScrollPane3.setViewportView(txtMesslog);

        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMessageKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 775, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnClip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnSendMouseClicked

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        communicate();
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSendKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            communicate();
        }
    }//GEN-LAST:event_btnSendKeyPressed

    private void txtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            communicate();
        }
    }//GEN-LAST:event_txtMessageKeyPressed

    private void communicate() {
//        try {
//            boolean flag = true;
//            OUTER:
//            while (flag) {
//                String message = buffered.readLine();
//                switch (message) {
//                    case "@e": //thoat chuong trinh
//                        break OUTER;
//                    default:
//                        if (message.isEmpty())
//                            message = " ";
//                        StringWriter stringW = new StringWriter();
//                        stringW.append("@m:<"+this.IP_friend+"><"+this.myIP+">[" + this.MyName + "]:\t" + message);
//                        serverSocket.sendMessage(stringW.toString());
//                        SendMessage(message);
//                        break;
//                }
//            }
//        } catch (Exception e) {
//        }
    }
    private void btnClipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClipActionPerformed
//        BufferedReader bis;
//        JFileChooser choosefile = new JFileChooser("d:");
//        choosefile.setAcceptAllFileFilterUsed(false);
//        choosefile.setDialogTitle("Select file");
//        FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .txt files", "txt");
//        choosefile.addChoosableFileFilter(restrict);
//        int conditionOfChooseFile = choosefile.showOpenDialog(null);
//        if (conditionOfChooseFile == JFileChooser.APPROVE_OPTION) {
//            File file = new File(choosefile.getSelectedFile().getAbsolutePath());
//            if (file.length() <= 5242880) {
//                try {
//                    //byte[] myarray = new byte[(int) file.length()];
//                    bis = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
//                    StringWriter stringW = new StringWriter();
//                    stringW.append("@f:<"+this.IP_friend+"><"+this.myIP+"><" + this.MyName + "><" + file.getName() + ">");
//                    int n;
//                    char[] buff = new char[1024];
//                    while ((n = bis.read(buff)) != -1) {
//                        stringW.write(buff, 0, n);
//                    }
//                    serverSocket.sendMessage(stringW.toString());
//                    //txtMesslog.setText(txtMesslog.getText() + "\n You sent the file (" + file.getPath() + ") to your friend!!!");
//                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(InitChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (UnsupportedEncodingException ex) {
//                    Logger.getLogger(InitChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (IOException ex) {
//                    Logger.getLogger(InitChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            } else {
//                JOptionPane.showMessageDialog(this, "File must be less and equal than 5MB!!!!\n You can't send this file.");
//            }
//        }
//        txtMessage.setText("");
    }//GEN-LAST:event_btnClipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InitChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InitChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InitChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InitChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                
//                try {
//                    JFrame chatFrame = new InitChatFrame("",serverSocket,IP_friend,Friend_name,myIP,MyName);
//                    chatFrame.setVisible(true);
//                } catch (IOException ex) {
//                    Logger.getLogger(InitChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                //chatFrame.setTitle(title);
//                
//                
//            }
//        });
    }
    private void SendMessage(String input) {
        //String input = txtMessage.getText();
        //String sender = Accountid;
        Color color = Color.BLUE;
        Append_Message(this.MyName, input, color);
//        txtMesslog.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
//        txtMesslog.setText(txtMesslog.getText()+"\n"+input);
////        txtMesslog.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        txtMessage.setText("");
    }

    private void Append_Message(String header, String content, Color headCol) {
        if (!content.isEmpty()) {
            Mess_header(header, headCol);
            Mess_content(content);
        }
    }

    private void Mess_header(String header, Color color) {
//        if(!header.equals(final_sendUser) )
//        {
        txtMesslog.setEditable(true);
        int len = txtMesslog.getDocument().getLength();
        txtMesslog.setCaretPosition(len);
        txtMesslog.setCharacterAttributes(MessageStyle.styleMessageContent(color, "San Francisco", 16), false);
        txtMesslog.replaceSelection("["+header + "]:");
        txtMesslog.setEditable(false);
//        }
//        else
//        {
//            txtMesslog.setEditable(true);
//            int len = txtMesslog.getDocument().getLength();
//            txtMesslog.setCaretPosition(len);       
//            txtMesslog.setCharacterAttributes(MessageStyle.styleMessageContent(Color.MAGENTA, "San Francisco", 13), false);  
//            for(int i=0;i<header.length()+3;i++)
//                txtMesslog.replaceSelection(" ");
//            txtMesslog.setEditable(false);
//        }        
//        final_sendUser=header;
    }

    private void Mess_content(String content) {
        txtMesslog.setEditable(true);
        int len = txtMesslog.getDocument().getLength();
        txtMesslog.setCaretPosition(len);
        txtMesslog.setCharacterAttributes(MessageStyle.styleMessageContent(Color.darkGray, "San Francisco", 16), false);
        txtMesslog.replaceSelection(content + "\n");
        txtMesslog.setEditable(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClip;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextPane txtMesslog;
    // End of variables declaration//GEN-END:variables
}
